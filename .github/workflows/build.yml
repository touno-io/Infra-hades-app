name: Build

on:
  push:
    branches: [main]
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - '**.spec.js'
      - '.idea'
      - '.vscode'
      - '.dockerignore'
      - 'Dockerfile'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/build.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node: [16]

    steps:
      - uses: actions/checkout@v3

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v3.2.2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: |
          yarn global add wasm-pack
          yarn

      - name: Build Release 📐
        run: yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact 🚀
        if: success() && github.event_name != 'pull_request' && !contains(github.ref, 'main')
        uses: actions/upload-artifact@v3
        with:
          name: release_on_${{ matrix. os }}
          path: release/
          retention-days: 5
